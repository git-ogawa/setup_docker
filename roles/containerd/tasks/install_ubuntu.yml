---
- name: Install dependencies
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
  become: true

- name: Add docker GPG key
  become: true
  block:
    - name: Mkdir /etc/apt/keyrings
      ansible.builtin.file:
        path: /etc/apt/keyrings
        owner: root
        group: root
        mode: "0755"
        state: directory
        recurse: true

    - name: Remove old gpg key
      ansible.builtin.file:
        path: "/etc/apt/keyrings/{{ item }}"
        state: absent
      loop:
        - docker.gpg
        - docker.gpg.tmp
      become: true

    - name: Download gpg key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.gpg.tmp
        mode: "0644"
      become: true

    - name: Dearmor gpg key
      ansible.builtin.command: |
        sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg /etc/apt/keyrings/docker.gpg.tmp
      changed_when: true
      become: true

    - name: Remove tmp gpg key
      ansible.builtin.file:
        path: /etc/apt/keyrings/docker.gpg.tmp
        state: absent
      become: true

- name: Set node architecture
  ansible.builtin.set_fact:
    arch: "{{ architectures[ansible_facts.architecture] }}"
    codename: "{{ ansible_facts.lsb.codename }}"

- name: Set up docker repository
  ansible.builtin.apt_repository:
    repo: >
      deb [arch={{ architecture }} signed-by=/etc/apt/keyrings/docker.gpg]
      https://download.docker.com/linux/ubuntu
      {{ codename }} stable
    state: present
    filename: docker
  become: true

- name: Apt update
  ansible.builtin.apt:
    update_cache: true
  become: true

- name: Install the latest containerd
  ansible.builtin.apt:
    name: containerd
    state: present
  become: true
  when: containerd_version == "latest"

- name: "Install containerd version {{ containerd_version }}"
  ansible.builtin.apt:
    name: "containerd={{ containerd_version }}"
    state: present
  become: true
  when: containerd_version != "latest"

# - name: Put /etc/containerd/config.toml
#   ansible.builtin.copy:
#     src: config_amd64.toml
#     dest: /etc/containerd/config.toml
#     mode: "0644"
#     owner: root
#     group: root
#   become: true
#   when: architecture == "x86_64" or architecture == "amd64"

# - name: Put /etc/containerd/config.toml
#   ansible.builtin.copy:
#     src: config_arm64_v8.toml
#     dest: /etc/containerd/config.toml
#     mode: "0644"
#     owner: root
#     group: root
#   become: true
#   when: architecture == "aarch64" or architecture == "arm64"

# - name: Restart containerd
#   ansible.builtin.systemd:
#     name: containerd
#     state: restarted
#     enabled: true
#     daemon_reload: true
#   become: true
